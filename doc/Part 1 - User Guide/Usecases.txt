/**

\page UserCase Some real-life PTS use cases

\section UserCaseGrids Plotting dust grids

When performing a simulation that includes a dust grid, SKIRT outputs some text files with information about the
dust grid (you can turn this behavior off when configuring the ski file, but it's on by default).
Each of the generated files contains data for plotting the intersection of the grid with one of
the coordinate planes.
The number of data files written depends on the dimension of the simulation's geometry: for spherical symmetry
only the intersection with the xy plane is written, for axial symmetry the intersections with the xy and xz planes
are written, and for general geometries all three intersections are written.
The data files are called prefix_ds_gridxy.dat, prefix_ds_gridxz.dat and prefix_ds_gridyz.dat.

PTS offers a simple way to create PDF files containing these plots for the results of a SKIRT simulation.
After the simulation has completed, make sure that the SKIRT output directory is your current directory, and
simply enter the command "pts plotgrids":

\verbatim
$ skirt mysim
...
$ pts plotgrids
Executing: plotgrids
Plotting mysim_ds_gridxy...
Done for mysim_ds_gridxy.
Plotting mysim_ds_gridxz...
Done for mysim_ds_gridxz.
Plotting mysim_ds_gridyz...
Done for mysim_ds_gridyz.
All done.
$
\endverbatim

The PDF files are placed next to the original data files and have the same name except for the .pdf extension.

\section UserCaseSEDs Plotting SEDs

When performing a panchromatic simulation, SKIRT outputs a text file with SED information for each instrument
of the appropriate type (including SED, Simple and Full instruments). These data files are called
prefix_instrument_sed.dat.

PTS offers a simple way to create a PDF file with a single plot showing these SEDs.
After the simulation has completed, make sure that the SKIRT output directory is your current directory,
and simply enter the command "pts plotseds":

\verbatim
$ pts plotseds
Executing: plotseds
Starting plotseds...
Created PDF grid plot file __/eagle_sed.pdf
Finished plotseds.
$
\endverbatim

The PDF files are placed next to the original data files and have a similar name
(after removing the instrument name) except for the .pdf extension.

\section UserCaseRGB Making RGB images

When performing a simulation, SKIRT outputs a FITS file with surface brightness information for each instrument
of the appropriate type (including Frame, Simple and Full instruments). These data files are called
prefix_instrument_total.fits. Each file contains a data frame per wavelength in the simulationâ€™s wavelength grid.
The frames are sorted by increasing wave length.

PTS offers a simple way to create a regular RGB image (in PNG format) for each of these FITS files.
By default PTS uses the first FITS frame for the Blue channel, the last FITS frame for the Red channel,
and some frame in the middle for the Green channel. This works well for monochromatic simulations
(producing a grayscale image) and for oligochromatic simulations with 3 wavelengths.

After the simulation has completed, make sure that the SKIRT output directory is your current directory,
and simply enter the command "pts makergb":

\verbatim
$ pts makergb
Executing: makergbimages
Starting makergbimages...
Created RGB image file __/MonoDisk_i88_total.png
Finished makergbimages.
$
\endverbatim

The PNG files are placed next to the original data files and have the same name except for the .png extension.

\section UserCaseUpgr Upgrading ski files

Some changes or extensions to SKIRT's simulation capabilities cause incompatible adjustments to existing ski files.
To avoid the manual labour involved in upgrading your ski files, PTS offers a simple way to upgrade ski files
automatically. The intention is to support all changes made after January 1, 2013. In other words,
any ski file generated by a SKIRT version built from the repository source code after that date should be
propertly adjusted to the most recent format version.

To upgrade the ski files in your current directory, simply enter the command "pts upgradeskifiles":

\verbatim
$ pts upgradeskifiles
Executing: upgradeskifiles
-> /Users/pcamps/SKIRT/run...
   axes.ski (not changed).
** spiral.ski (UPGRADED).
   yep.ski (not changed).
All done.
$
\endverbatim

Before actually upgrading a ski file, the script makes a backup copy -- just to make sure that the original
is preserved in case anything goes wrong.
The name of the backup copy includes a time stamp and has the ".xml" filename extension.

The script also allows specifying a different target directory. It can even upgrade all ski files in all recursively
nested directories. See the documentation of the do::upgradeskifiles script for more information.

*/
